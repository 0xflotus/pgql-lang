module subqueries

language pgql-lang

test Aggregation in subquery and referencing variable from outer query outside of aggregation (1) [[

  SELECT n
   MATCH (n)
   WHERE EXISTS ( SELECT COUNT(*) AS cnt, [[n]]
                   MATCH (m)
                )

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Aggregation in subquery and referencing variable from outer query outside of aggregation (2) [[

  SELECT 123 AS x
   MATCH (n)
   WHERE EXISTS (   SELECT COUNT(*) AS cnt
                     MATCH (m)
                  ORDER BY [[n]].prop
                )

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Reference variable from outer query after GROUP BY (1) [[

    SELECT n
     MATCH (n)
     WHERE EXISTS (    SELECT m
                        MATCH (m)
                     GROUP BY m
                     ORDER BY [[n]].prop
                  )

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Reference variable from outer query after GROUP BY (2) [[

    SELECT n
     MATCH (n)
     WHERE EXISTS (    SELECT m
                        MATCH (m)
                     GROUP BY m
                     ORDER BY [[n]].prop
                  )
  GROUP BY n

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Reference variable from outer query after GROUP BY (3) [[

    SELECT n
     MATCH (n)
     WHERE EXISTS (    SELECT [[n]].prop AS prop
                        MATCH (m)
                     GROUP BY m
                  )
  GROUP BY n

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Reference variable from outer query after GROUP BY (4) [[

   SELECT n AS n
    MATCH (n)
    WHERE EXISTS (   SELECT AVG(m.age) AS avg
                      MATCH (n) -> (m)
                   GROUP BY m.age AS nAge
                   ORDER BY [[n]].age
                 )

]] error like "Unresolved variable (did you mean to use a group key?)" at #1

test Reference variable from outer query after aggregation (1) [[

  SELECT n AS x
     MATCH (n)
     WHERE EXISTS (   SELECT COUNT(*) AS cnt
                       MATCH (m)
                    ORDER BY [[x]].prop
                  )

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Reference variable from outer query after aggregation (2) [[

    SELECT n
     MATCH (n)
     WHERE EXISTS (   SELECT COUNT(*) AS cnt, [[x]].prop AS prop
                       MATCH (m)
                    ORDER BY x.prop
                  )
  GROUP BY n AS x

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Reference variable from outer query after aggregation (3) [[

  SELECT n AS n
   MATCH (n)
   WHERE EXISTS (   SELECT AVG(m.age) AS avg
                     MATCH (n) -> (m)
                  ORDER BY [[n]].age
                )

]] error like "Unresolved variable (did you mean to use an aggregation?)" at #1

test Variable from outer query not visible in inner query (1) [[

    SELECT COUNT(*) AS cnt
     MATCH (n) -> (m)
  GROUP BY n
  ORDER BY EXISTS (
                    SELECT *
                     MATCH (n) -> (n)
                     WHERE [[m]].age = n.age
                  )

]] error like "Unresolved variable" at #1

test Scalar subquery with zero columns (1) [[

  SELECT ( SELECT [[*]] MATCH () ) AS x
   MATCH (n)

]] error like "Scalar subquery is expected to return a single column, but zero columns were returned" at #1

test Scalar subquery with zero columns (2) [[

  SELECT ( SELECT [[*]] MATCH () WHERE ( SELECT [[*]] MATCH () )) AS x
   MATCH (n)

]] error like "Scalar subquery is expected to return a single column, but zero columns were returned" at #1, #2

test Scalar subquery with multiple columns (1) [[

  SELECT ( SELECT [[n.prop1 AS p1, n.prop2 AS p2]] MATCH (n) ) AS x
   MATCH (n)

]] error like "Scalar subquery is expected to return a single column, but multiple columns were returned" at #1

test Scalar subquery with multiple columns (2) [[

  SELECT ( SELECT [[n.prop1 AS p1, n.prop2 AS p2]] MATCH (n) WHERE ( SELECT [[n.prop1 AS p1, n.prop2 AS p2]] MATCH (n) ) ) AS x
   MATCH (n)

]] error like "Scalar subquery is expected to return a single column, but multiple columns were returned" at #1, #2

test Duplicate variable passed from outer query (1) [[

  SELECT EXISTS ( SELECT e MATCH (n) <-[ [[e]] ]- (m) ) AS x
   MATCH (n) -[e]-> (m)

]] error like "a variable with the same name is passed from an outer query" at #1

test Duplicate variable passed from outer query (2) [[

  SELECT EXISTS ( SELECT e MATCH ([[e]]) ) AS x
   MATCH (n) -[e]-> (m)

]] error like "a variable with the same name is passed from an outer query" at #1

test Duplicate variable passed from outer query (3) [[

  SELECT EXISTS ( SELECT e MATCH (n) <-[ [[e]] ]- (m) ) AS x
   MATCH (n) -[e]-> (m)
  GROUP BY e

]] error like "a variable with the same name is passed from an outer query" at #1

test Duplicate variable passed from outer query (4) [[

  SELECT 123 AS b, e
   MATCH (a) -[e]-> ()
  ORDER BY EXISTS ( SELECT 123 AS c MATCH ([[b]]), ([[e]]) )

]] error like "a variable with the same name is passed from an outer query" at #1, #2

test Duplicate variable passed from outer query (5) [[

  SELECT 123 AS b, e, a
   MATCH (a) -[e]-> ()
  ORDER BY EXISTS ( SELECT 123 AS c MATCH () -[ [[b]] ]-> () -[ [[e]] ]-> ()  -[ [[a]] ]-> () )

]] error like "a variable with the same name is passed from an outer query" at #1, #2, #3
