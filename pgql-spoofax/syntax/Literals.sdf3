module Literals

context-free syntax

  Literal   = NumericLiteral
  Literal   = BooleanLiteral
  Literal   = String

  AltLit.Or = <<AltLit>|<AltLit>> {left}
  AltLit    = Literal
  AltLit    = UnquotedString

context-free syntax

  NumericLiteral.Integer = INTEGER
  NumericLiteral.Decimal = DECIMAL
  String.String          = STRING
  UnquotedString.String  = UNQUOTED-STRING
  BooleanLiteral.True    = <true> {case-insensitive}
  BooleanLiteral.False   = <false> {case-insensitive}
  Literal.Null           = <null> {case-insensitive}

lexical syntax

  INTEGER              = [0-9]+
  DECIMAL              = [0-9]* "." [0-9]+

  STRING               = SINGLE-QUOTED-STRING | DOUBLE-QUOTED-STRING
  SINGLE-QUOTED-STRING = "'" (~[\'\n\\] | ESCAPE-CHAR)* "'"
  DOUBLE-QUOTED-STRING = '"' (~[\"\n\\] | ESCAPE-CHAR)* '"'
  ESCAPE-CHAR          = "\\" [tbnrf\\\"\']

  UNQUOTED-STRING      = [a-zA-Z][a-zA-Z0-9\_]*

  CUSTOM-TYPE          = [a-zA-Z][a-zA-Z0-9\_]*

lexical restrictions // greedy matching

  INTEGER         -/- [0-9]
  DECIMAL         -/- [0-9]
  UNQUOTED-STRING -/- [a-zA-Z0-9\_]

lexical syntax

  UNQUOTED-STRING = [Tt][Rr][Uu][Ee] {reject}
  UNQUOTED-STRING = [Ff][Aa][Ll][Ss][Ee] {reject}
  UNQUOTED-STRING = [Nn][Uu][Ll][Ll] {reject}
