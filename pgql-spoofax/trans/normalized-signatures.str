module normalized-signatures

signature constructors // for type checking (see trans/types.ts)

  VertexTy    : VertexTy
  EdgeTy      : EdgeTy
  PathTy      : PathTy
  BooleanTy   : BooleanTy
  NumericTy   : NumericTy
  StringTy    : StringTy
  StringSetTy : StringSetTy
  DateTy      : DateTy
  TimeTy      : TimeTy
  TimestampTy : TimestampTy
  UnknownTy   : UnknownTy

signature constructors // for the normalized AST (see trans/normalize.str)

  NormalizedQuery       : CommonPathExpressions * Vars * FromClause * GraphPattern * GroupByClause * HavingClause * List(OrderByElem) * LimitOffsetClauses * List(ErrorMessage) * PgqlVersion -> NormalizedQuery
  PgqlVersion           : STRING
  CommonPathExpressions : List(CommonPathExpression) -> CommonPathExpressions
  CommonPathExpression  : PATHPATTERNNAME * Vertices * Connections * Constraints -> CommonPathExpression
  GraphPattern          : Vertices * Connections * Constraints -> GraphPattern
  Vertices              : List(Vertex) -> Vertices
  Vertex                : Var -> Vertex
  Edges                 : List(Edge) -> Edges
  Edge                  : Var * Var * Var * Direction -> Edge
  Paths                 : List(Path) -> Paths
  Path                  : Var * Var * PathPatternRef * Option(KleeneStar) * Var * Direction -> Path
  Constraints           : List(Exp) -> Constraints
  Incoming              : Direction
  Outgoing              : Direction
  Undirected            : Direction

  ExpAsVar              : Exp * Var * Anonymous -> ExpAsVar
  Anonymous             : Anonymous
  NonAnonymous          : Anonymous

  OrderByElem           : Exp * Ordering * Version -> OrderbyElem
  Asc                   : Ordering
  Desc                  : Ordering
  LimitOffsetClauses    : Option(LimitClause) * Option(OffsetClause) -> LimitOffsetClauses

  Neq                   : Exp * Exp -> Exp

  BindVariable          : INTEGER -> BindVariable
  Version               : STRING

signature constructors // for name binding (see trans/trans-for-nabl.str)

  ExpAsVar              : VarDef * Exp * Anonymous* Clause -> ExpAsVar
  AnonymousExpAsVar     : VarDef * Exp * Anonymous* Clause -> AnonymousExpAsVar

  CreateOneGroup         : CreateOneGroup

  VarDef                 : Var * Clause -> VarDef
  VarRef                 : Var * Clause -> VarRef

  MatchClause            : Clause
  GroupByClause          : Clause
  SelectClause           : Clause
  None                   : Clause // for unresolved variable

signature constructors // for error checking (see trans/check.str)

  ReferenceInInlinedConstraint      : Var -> ReferenceInInlinedConstraint
  CrossReferenceInInlinedConstraint : Var -> CrossReferenceInInlinedConstraint
  ErrorMessage                      : STRING -> ErrorMessage
