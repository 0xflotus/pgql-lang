module normalized-signatures

signature constructors // for type checking (see trans/types.ts)
  
  NodeTy : NodeTy
  EdgeTy : EdgeTy
  PathTy : PathTy
  BooleanTy : BooleanTy
  IntegerTy : IntegerTy
  DecimalTy : DecimalTy
  StringTy : StringTy
  StringSetTy : StringSetTy
  UnknownTy : UnknownTy

signature constructors // for the normalized AST (see trans/normalize.str)
  
  PathPatterns         : List(PathPattern) -> PathPatterns
  PathPattern          : name * Nodes * Connections * Constraints -> PathPattern
  Query                : pathPatterns * projection * inputGraph * graphPattern * groupBy * orderByElems * limitOffsets -> Query
  GraphPattern         : Nodes * Edges * Paths * Constraints -> GraphPattern
  Select               : Option(distinctOrReduced) * List(expAsVars) * groupBy * having * orderBy * limitOffsets -> Select
  Nodes                : List(Node) -> Nodes
  Node                 : Var -> Node
  Edges                : List(Edge) -> Edges
  Edge                 : src * name * dst * Direction -> Edge
  Paths                : List(Path) -> Paths
  Path                 : src * dst * pathPatternName * kleeneStar * pathName -> Path
  Constraints          : List(Exp) -> Constraints
  Incoming             : Direction
  Outgoing             : Direction

  Vars                 : List(Var) -> Vars
  ExpAsVar             : VarDef * Exp -> ExpAsVar
  OrderClause          : List(OrderElem) -> OrderClause
  GroupClause          : List(GroupElem) -> GroupClause
  OrderByElem          : Exp * Ordering -> OrderbyElem
  Asc                  : Ordering
  Desc                 : Ordering
  LimitOffsetClauses   : Option(LimitClause) * Option(OffsetClause) -> LimitOffsetClauses

  Not                  : Exp -> Exp

  Contains             : Exp * Exp -> Exp

signature constructors // for name binding (see trans/trans-for-nabl.str)
    
  SelectOrGroupRef     : Var -> SelectOrGroupRef
  GroupRef             : Var -> GroupRef
  ExpAsGroupVar        : Var * Exp -> ExpAsGroupVar

signature constructors // for errer checking (see trans/check.str)
  
  ReferenceInInlinedConstraint : var -> ReferenceInInlinedConstraint
  CrossReferenceInInlinedConstraint : CrossReferenceInInlinedConstraint