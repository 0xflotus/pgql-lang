module Names
imports Keywords Literals Expressions

exports
  context-free syntax
    Var             -> VarDef     {cons("VarDef")}
    Var             -> VarRef     {cons("VarRef")}
    Exp VarAssign?  -> ExpAsVar   {cons("ExpAsVar")}
    AS VarDef       -> VarAssign  {cons("VarAssign")}
    Var             -> NodeVarRef {cons("NodeVarRef")}
    VarRef "." Prop -> PropRef    {cons("PropRef")}
    VARNAME         -> Var        
    PROPNAME        -> Prop       
    STRING          -> Prop       
    "."             -> Dot        {cons("Dot")}

  context-free syntax
    CONTENTCOMPLETE -> VarDef     {cons("COMPLETION-VarDef")}
    CONTENTCOMPLETE -> VarRef     {cons("COMPLETION-VarRef")}
    CONTENTCOMPLETE -> ExpAsVar   {cons("COMPLETION-ExpAsVar")}
    CONTENTCOMPLETE -> VarAssign  {cons("COMPLETION-VarAssign")}
    CONTENTCOMPLETE -> NodeVarRef {cons("COMPLETION-NodeVarRef")}
    CONTENTCOMPLETE -> PropRef    {cons("COMPLETION-PropRef")}
    CONTENTCOMPLETE -> Var        {cons("COMPLETION-Var")}
    CONTENTCOMPLETE -> Prop       {cons("COMPLETION-Prop")}
    CONTENTCOMPLETE -> Dot        {cons("COMPLETION-Dot")}

  lexical syntax
    NAME                    -> GRAPHNAME 
    NAME                    -> VARNAME   
    NAME                    -> PROPNAME  
    [a-zA-Z] [a-zA-Z0-9\_]* -> NAME      

  lexical syntax
    [Ss] [Ee] [Ll] [Ee] [Cc] [Tt] -> NAME {reject}
    [Ww] [Hh] [Ee] [Rr] [Ee]      -> NAME {reject}
    [Aa] [Ss]                     -> NAME {reject}
    [Ww] [Ii] [Tt] [Hh]           -> NAME {reject}
    [Oo] [Rr] [Dd] [Ee] [Rr]      -> NAME {reject}
    [Gg] [Rr] [Oo] [Uu] [Pp]      -> NAME {reject}
    [Bb] [Yy]                     -> NAME {reject}
    [Aa] [Ss] [Cc]                -> NAME {reject}
    [Dd] [Ee] [Ss] [Cc]           -> NAME {reject}
    [Ll] [Ii] [Mm] [Ii] [Tt]      -> NAME {reject}
    [Oo] [Ff] [Ff] [Ss] [Ee] [Tt] -> NAME {reject}
    [Aa] [Nn] [Dd]                -> NAME {reject}
    [Oo] [Rr]                     -> NAME {reject}
    [Tt] [Rr] [Uu] [Ee]           -> NAME {reject}
    [Ff] [Aa] [Ll] [Ss] [Ee]      -> NAME {reject}
    [Nn] [Uu] [Ll] [Ll]           -> NAME {reject}

  lexical restrictions
    NAME -/- [a-zA-Z0-9\_]