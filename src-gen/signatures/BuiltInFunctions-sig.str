module src-gen/signatures/BuiltInFunctions-sig

imports
  src-gen/signatures/Keywords-sig
  src-gen/signatures/Names-sig
  src-gen/signatures/Expressions-sig
  src-gen/signatures/PGQL-sig
  src-gen/signatures/Literals-sig


signature
  constructors
    Label     : Obj * LABEL -> InlinedCall
    Id        : Obj * ID -> InlinedCall
    Has       : Obj * HAS * List(Prop) -> InlinedCall
    InDegree  : Obj * INDEGREE -> InlinedCall
    OutDegree : Obj * OUTDEGREE -> InlinedCall
    Src       : Obj * SRC -> InlinedCall
    Dst       : Obj * DST -> InlinedCall
    Nodes     : Obj * NODES -> InlinedCall
    Edges     : Obj * EDGES -> InlinedCall
    Length    : Obj * LENGTH -> InlinedCall
    Obj       : VarRef * Dot -> Obj
    Obj       : Option(Dot) -> Obj

  constructors
    Label : Exp * LABEL -> FunctionCall
    Id    : Exp * ID -> FunctionCall
    Has   : Exp * HAS * List(Prop) -> FunctionCall

  constructors
    InDegree  : Exp * INDEGREE -> FunctionCall
    OutDegree : Exp * OUTDEGREE -> FunctionCall

  constructors
    Src : Exp * SRC -> FunctionCall
    Dst : Exp * DST -> FunctionCall

  constructors
    Nodes  : Exp * NODES -> FunctionCall
    Edges  : Exp * EDGES -> FunctionCall
    Length : Exp * LENGTH -> FunctionCall

  constructors
    Head : Exp * HEAD -> FunctionCall
    Last : Exp * LAST -> FunctionCall
    Init : Exp * INIT -> FunctionCall
    Tail : Exp * TAIL -> FunctionCall

  constructors
    Contains   : Exp * CONTAINS * Exp * Exp -> FunctionCall
    BeginsWith : Exp * BEGINSWITH * Exp * Exp -> FunctionCall
    EndsWith   : Exp * ENDSWITH * Exp * Exp -> FunctionCall

  constructors
    Between  : Exp * BETWEEN * Exp * Exp -> FunctionCall
    Year     : Exp * YEAR -> FunctionCall
    Month    : Exp * MONTH -> FunctionCall
    Day      : Exp * DAY -> FunctionCall
    Hours    : Exp * HOURS -> FunctionCall
    Minutes  : Exp * MINUTES -> FunctionCall
    Seconds  : Exp * SECONDS -> FunctionCall
    Timezone : Exp * TIMEZONE -> FunctionCall

  constructors
    ExistsFunc : EXISTS * GroupGraphPattern -> FunctionCall
    Case       : CASE * Exp * List(WhenThen) * ELSE * Exp * END -> FunctionCall
    WhenThen   : WHEN * Exp * THEN * Exp -> WhenThen

  constructors
    COUNT        : COUNT * Option(Distinct) * StarOrExp -> FunctionCall
    MIN          : MIN * Option(Distinct) * Exp -> FunctionCall
    MAX          : MAX * Option(Distinct) * Exp -> FunctionCall
    SUM          : SUM * Option(Distinct) * Exp -> FunctionCall
    AVG          : AVG * Option(Distinct) * Exp -> FunctionCall
    GROUP-CONCAT : GROUP-CONCAT * Option(Distinct) * Exp * Option(Group-Concat-Sep) -> FunctionCall
    Star         : StarOrExp
                 : Exp -> StarOrExp
    Sep          : String -> Group-Concat-Sep
    Distinct     : DISTINCT -> Distinct