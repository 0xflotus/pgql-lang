module src-gen/pp/BuiltInFunctions-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  src-gen/signatures/BuiltInFunctions-sig


imports
  src-gen/signatures/Keywords-sig
  src-gen/signatures/Names-sig
  src-gen/signatures/Expressions-sig
  src-gen/signatures/PGQL-sig
  src-gen/signatures/Literals-sig


imports
  src-gen/pp/Keywords-pp
  src-gen/pp/Names-pp
  src-gen/pp/Expressions-pp
  src-gen/pp/PGQL-pp
  src-gen/pp/Literals-pp


strategies
  prettyprint-example =
    prettyprint-InlinedCall

  prettyprint-InlinedCall :
    Has(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ t1__'
                           , S("(")
                           , t2__'
                           , S(")")
                           ]
                         )
                       ]
    with t1__' := <pp-one-Z(prettyprint-HAS)> t1__
    with t2__' := <pp-H-list(prettyprint-Prop|", ")> t2__

  is-InlinedCall =
    ?Has(_, _)

  prettyprint-InlinedCall :
    InDegree(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [t1__', S("()")]
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-INDEGREE)> t1__

  is-InlinedCall =
    ?InDegree(_)

  prettyprint-InlinedCall :
    OutDegree(t1__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [t1__', S("()")]
                         )
                       ]
    with t1__' := <pp-one-Z(prettyprint-OUTDEGREE)> t1__

  is-InlinedCall =
    ?OutDegree(_)

  prettyprint-InlinedCall :
    Src(t1__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [t1__', S("()")]
                   )
                 ]
    with t1__' := <pp-one-Z(prettyprint-SRC)> t1__

  is-InlinedCall =
    ?Src(_)

  prettyprint-InlinedCall :
    Dst(t1__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [t1__', S("()")]
                   )
                 ]
    with t1__' := <pp-one-Z(prettyprint-DST)> t1__

  is-InlinedCall =
    ?Dst(_)

  prettyprint-InlinedCall :
    Nodes(t1__) -> [ H(
                       [SOpt(HS(), "0")]
                     , [t1__', S("()")]
                     )
                   ]
    with t1__' := <pp-one-Z(prettyprint-NODES)> t1__

  is-InlinedCall =
    ?Nodes(_)

  prettyprint-InlinedCall :
    Edges(t1__) -> [ H(
                       [SOpt(HS(), "0")]
                     , [t1__', S("()")]
                     )
                   ]
    with t1__' := <pp-one-Z(prettyprint-EDGES)> t1__

  is-InlinedCall =
    ?Edges(_)

  prettyprint-InlinedCall :
    Length(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [t1__', S("()")]
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-LENGTH)> t1__

  is-InlinedCall =
    ?Length(_)

  is-InlinedCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-FunctionCall :
    Has(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S(". ")
                                 , t2__'
                                 , S("(")
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-HAS)> t2__
    with t3__' := <pp-H-list(prettyprint-Prop|", ")> t3__

  is-FunctionCall =
    ?Has(_, _, _)

  is-FunctionCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-FunctionCall :
    InDegree(t1__, t2__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [ t1__'
                                , S(". ")
                                , t2__'
                                , S("()")
                                ]
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-INDEGREE)> t2__

  is-FunctionCall =
    ?InDegree(_, _)

  prettyprint-FunctionCall :
    OutDegree(t1__, t2__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S(". ")
                                 , t2__'
                                 , S("()")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-OUTDEGREE)> t2__

  is-FunctionCall =
    ?OutDegree(_, _)

  is-FunctionCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-FunctionCall :
    Src(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ t1__'
                           , S(". ")
                           , t2__'
                           , S("()")
                           ]
                         )
                       ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-SRC)> t2__

  is-FunctionCall =
    ?Src(_, _)

  prettyprint-FunctionCall :
    Dst(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ t1__'
                           , S(". ")
                           , t2__'
                           , S("()")
                           ]
                         )
                       ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-DST)> t2__

  is-FunctionCall =
    ?Dst(_, _)

  is-FunctionCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-FunctionCall :
    Nodes(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ t1__'
                             , S(". ")
                             , t2__'
                             , S("()")
                             ]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-NODES)> t2__

  is-FunctionCall =
    ?Nodes(_, _)

  prettyprint-FunctionCall :
    Edges(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ t1__'
                             , S(". ")
                             , t2__'
                             , S("()")
                             ]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-EDGES)> t2__

  is-FunctionCall =
    ?Edges(_, _)

  prettyprint-FunctionCall :
    Length(t1__, t2__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [ t1__'
                              , S(". ")
                              , t2__'
                              , S("()")
                              ]
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-LENGTH)> t2__

  is-FunctionCall =
    ?Length(_, _)

  is-FunctionCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-FunctionCall :
    Head(t1__, t2__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ t1__'
                            , S(". ")
                            , t2__'
                            , S("()")
                            ]
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-HEAD)> t2__

  is-FunctionCall =
    ?Head(_, _)

  prettyprint-FunctionCall :
    Last(t1__, t2__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ t1__'
                            , S(". ")
                            , t2__'
                            , S("()")
                            ]
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-LAST)> t2__

  is-FunctionCall =
    ?Last(_, _)

  prettyprint-FunctionCall :
    Init(t1__, t2__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ t1__'
                            , S(". ")
                            , t2__'
                            , S("()")
                            ]
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-INIT)> t2__

  is-FunctionCall =
    ?Init(_, _)

  prettyprint-FunctionCall :
    Tail(t1__, t2__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ t1__'
                            , S(". ")
                            , t2__'
                            , S("()")
                            ]
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-TAIL)> t2__

  is-FunctionCall =
    ?Tail(_, _)

  is-FunctionCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-FunctionCall :
    Contains(t1__, t2__, t3__, t4__) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , [ t1__'
                                            , S(". ")
                                            , t2__'
                                            , S("(")
                                            , t3__'
                                            , S(", ")
                                            , t4__'
                                            , S(")")
                                            ]
                                          )
                                        ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-CONTAINS)> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__
    with t4__' := <pp-one-Z(prettyprint-Exp)> t4__

  is-FunctionCall =
    ?Contains(_, _, _, _)

  prettyprint-FunctionCall :
    BeginsWith(t1__, t2__, t3__, t4__) -> [ H(
                                              [SOpt(HS(), "0")]
                                            , [ t1__'
                                              , S(". ")
                                              , t2__'
                                              , S("(")
                                              , t3__'
                                              , S(", ")
                                              , t4__'
                                              , S(")")
                                              ]
                                            )
                                          ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-BEGINSWITH)> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__
    with t4__' := <pp-one-Z(prettyprint-Exp)> t4__

  is-FunctionCall =
    ?BeginsWith(_, _, _, _)

  prettyprint-FunctionCall :
    EndsWith(t1__, t2__, t3__, t4__) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , [ t1__'
                                            , S(". ")
                                            , t2__'
                                            , S("(")
                                            , t3__'
                                            , S(", ")
                                            , t4__'
                                            , S(")")
                                            ]
                                          )
                                        ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-ENDSWITH)> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__
    with t4__' := <pp-one-Z(prettyprint-Exp)> t4__

  is-FunctionCall =
    ?EndsWith(_, _, _, _)

  is-FunctionCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-FunctionCall :
    Between(t1__, t2__, t3__, t4__) -> [ H(
                                           [SOpt(HS(), "0")]
                                         , [ t1__'
                                           , S(". ")
                                           , t2__'
                                           , S("(")
                                           , t3__'
                                           , S(", ")
                                           , t4__'
                                           , S(")")
                                           ]
                                         )
                                       ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-BETWEEN)> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__
    with t4__' := <pp-one-Z(prettyprint-Exp)> t4__

  is-FunctionCall =
    ?Between(_, _, _, _)

  prettyprint-FunctionCall :
    Year(t1__, t2__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ t1__'
                            , S(". ")
                            , t2__'
                            , S("()")
                            ]
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-YEAR)> t2__

  is-FunctionCall =
    ?Year(_, _)

  prettyprint-FunctionCall :
    Month(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ t1__'
                             , S(". ")
                             , t2__'
                             , S("()")
                             ]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-MONTH)> t2__

  is-FunctionCall =
    ?Month(_, _)

  prettyprint-FunctionCall :
    Day(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ t1__'
                           , S(". ")
                           , t2__'
                           , S("()")
                           ]
                         )
                       ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-DAY)> t2__

  is-FunctionCall =
    ?Day(_, _)

  prettyprint-FunctionCall :
    Hours(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ t1__'
                             , S(". ")
                             , t2__'
                             , S("()")
                             ]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-HOURS)> t2__

  is-FunctionCall =
    ?Hours(_, _)

  prettyprint-FunctionCall :
    Minutes(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ t1__'
                               , S(". ")
                               , t2__'
                               , S("()")
                               ]
                             )
                           ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-MINUTES)> t2__

  is-FunctionCall =
    ?Minutes(_, _)

  prettyprint-FunctionCall :
    Seconds(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ t1__'
                               , S(". ")
                               , t2__'
                               , S("()")
                               ]
                             )
                           ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-SECONDS)> t2__

  is-FunctionCall =
    ?Seconds(_, _)

  prettyprint-FunctionCall :
    Timezone(t1__, t2__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [ t1__'
                                , S(". ")
                                , t2__'
                                , S("()")
                                ]
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-TIMEZONE)> t2__

  is-FunctionCall =
    ?Timezone(_, _)

  is-FunctionCall =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-example =
    prettyprint-WhenThen

  prettyprint-FunctionCall :
    ExistsFunc(t1__, t2__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [t1__', S(" "), t2__']
                                )
                              ]
    with t1__' := <pp-one-Z(prettyprint-EXISTS)> t1__
    with t2__' := <pp-one-Z(prettyprint-GroupGraphPattern)> t2__

  is-FunctionCall =
    ?ExistsFunc(_, _)

  prettyprint-FunctionCall :
    Case(t1__, t2__, t3__, t4__, t5__, t6__) -> [ H(
                                                    [SOpt(HS(), "0")]
                                                  , [ t1__'
                                                    , S(" ")
                                                    , t2__'
                                                    , S(" ")
                                                    , t3__'
                                                    , S(" ")
                                                    , t4__'
                                                    , S(" ")
                                                    , t5__'
                                                    , S(" ")
                                                    , t6__'
                                                    ]
                                                  )
                                                ]
    with t1__' := <pp-one-Z(prettyprint-CASE)> t1__
    with t2__' := <pp-one-Z(prettyprint-Exp)> t2__
    with t3__' := <pp-H-list(prettyprint-WhenThen|" ")> t3__
    with t4__' := <pp-one-Z(prettyprint-ELSE)> t4__
    with t5__' := <pp-one-Z(prettyprint-Exp)> t5__
    with t6__' := <pp-one-Z(prettyprint-END)> t6__

  is-FunctionCall =
    ?Case(_, _, _, _, _, _)

  prettyprint-WhenThen :
    WhenThen(t1__, t2__, t3__, t4__) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , [ t1__'
                                            , S(" ")
                                            , t2__'
                                            , S(" ")
                                            , t3__'
                                            , S(" ")
                                            , t4__'
                                            ]
                                          )
                                        ]
    with t1__' := <pp-one-Z(prettyprint-WHEN)> t1__
    with t2__' := <pp-one-Z(prettyprint-Exp)> t2__
    with t3__' := <pp-one-Z(prettyprint-THEN)> t3__
    with t4__' := <pp-one-Z(prettyprint-Exp)> t4__

  is-WhenThen =
    ?WhenThen(_, _, _, _)

  is-FunctionCall =
    fail

  is-WhenThen =
    fail


strategies
  prettyprint-example =
    prettyprint-FunctionCall

  prettyprint-example =
    prettyprint-StarOrExp

  prettyprint-example =
    prettyprint-Group-Concat-Sep

  prettyprint-example =
    prettyprint-Distinct

  prettyprint-FunctionCall :
    COUNT(t1__, t2__, t3__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ t1__'
                                   , S("(")
                                   , t2__'
                                   , t3__'
                                   , S(")")
                                   ]
                                 )
                               ]
    with t1__' := <pp-one-Z(prettyprint-COUNT)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-StarOrExp)> t3__

  is-FunctionCall =
    ?COUNT(_, _, _)

  prettyprint-FunctionCall :
    MIN(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-MIN)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-FunctionCall =
    ?MIN(_, _, _)

  prettyprint-FunctionCall :
    MAX(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-MAX)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-FunctionCall =
    ?MAX(_, _, _)

  prettyprint-FunctionCall :
    SUM(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-SUM)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-FunctionCall =
    ?SUM(_, _, _)

  prettyprint-FunctionCall :
    AVG(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-AVG)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-FunctionCall =
    ?AVG(_, _, _)

  prettyprint-FunctionCall :
    GROUP-CONCAT(t1__, t2__, t3__, t4__) -> [ H(
                                                [SOpt(HS(), "0")]
                                              , [ t1__'
                                                , S("(")
                                                , t2__'
                                                , t3__'
                                                , t4__'
                                                , S(")")
                                                ]
                                              )
                                            ]
    with t1__' := <pp-one-Z(prettyprint-GROUP-CONCAT)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__
    with t4__' := <pp-option(pp-one-Z(prettyprint-Group-Concat-Sep))> t4__

  is-FunctionCall =
    ?GROUP-CONCAT(_, _, _, _)

  prettyprint-StarOrExp :
    Star() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("*")]
                )
              ]

  is-StarOrExp =
    ?Star()

  prettyprint-StarOrExp :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-StarOrExp)
    where t1__' := <pp-one-Z(prettyprint-Exp)> t1__

  prettyprint-Group-Concat-Sep :
    Sep(t1__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S(", "), t1__']
                   )
                 ]
    with t1__' := <pp-one-Z(prettyprint-String)> t1__

  is-Group-Concat-Sep =
    ?Sep(_)

  prettyprint-Distinct :
    Distinct(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [t1__']
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-DISTINCT)> t1__

  is-Distinct =
    ?Distinct(_)

  is-FunctionCall =
    fail

  is-StarOrExp =
    fail

  is-Group-Concat-Sep =
    fail

  is-Distinct =
    fail