module src-gen/pp/BuiltInFunctions-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  src-gen/signatures/BuiltInFunctions-sig


imports
  src-gen/signatures/Keywords-sig
  src-gen/signatures/Names-sig
  src-gen/signatures/Expressions-sig
  src-gen/signatures/PGQL-sig
  src-gen/signatures/Literals-sig


imports
  src-gen/pp/Keywords-pp
  src-gen/pp/Names-pp
  src-gen/pp/Expressions-pp
  src-gen/pp/PGQL-pp
  src-gen/pp/Literals-pp


strategies
  prettyprint-example =
    prettyprint-InlinedCall

  prettyprint-example =
    prettyprint-Obj

  prettyprint-InlinedCall :
    Label(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [t1__', t2__', S("()")]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-LABEL)> t2__

  is-InlinedCall =
    ?Label(_, _)

  prettyprint-InlinedCall :
    Labels(t1__, t2__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [t1__', t2__', S("()")]
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-LABELS)> t2__

  is-InlinedCall =
    ?Labels(_, _)

  prettyprint-InlinedCall :
    HasLabel(t1__, t2__, t3__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [ t1__'
                                      , t2__'
                                      , S("(")
                                      , t3__'
                                      , S(")")
                                      ]
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-HASLABEL)> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-InlinedCall =
    ?HasLabel(_, _, _)

  prettyprint-InlinedCall :
    Id(t1__, t2__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [t1__', t2__', S("()")]
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-ID)> t2__

  is-InlinedCall =
    ?Id(_, _)

  prettyprint-InlinedCall :
    Has(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , t2__'
                                 , S("(")
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-HAS)> t2__
    with t3__' := <pp-H-list(prettyprint-Prop|", ")> t3__

  is-InlinedCall =
    ?Has(_, _, _)

  prettyprint-InlinedCall :
    InDegree(t1__, t2__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [t1__', t2__', S("()")]
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-INDEGREE)> t2__

  is-InlinedCall =
    ?InDegree(_, _)

  prettyprint-InlinedCall :
    OutDegree(t1__, t2__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [t1__', t2__', S("()")]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-OUTDEGREE)> t2__

  is-InlinedCall =
    ?OutDegree(_, _)

  prettyprint-InlinedCall :
    Nodes(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [t1__', t2__', S("()")]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-NODES)> t2__

  is-InlinedCall =
    ?Nodes(_, _)

  prettyprint-InlinedCall :
    Edges(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [t1__', t2__', S("()")]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-EDGES)> t2__

  is-InlinedCall =
    ?Edges(_, _)

  prettyprint-InlinedCall :
    Length(t1__, t2__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [t1__', t2__', S("()")]
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-Obj)> t1__
    with t2__' := <pp-one-Z(prettyprint-LENGTH)> t2__

  is-InlinedCall =
    ?Length(_, _)

  prettyprint-Obj :
    Obj(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [t1__', t2__']
                         )
                       ]
    with t1__' := <pp-one-Z(prettyprint-VarRef)> t1__
    with t2__' := <pp-one-Z(prettyprint-Dot)> t2__

  is-Obj =
    ?Obj(_, _)

  prettyprint-Obj :
    Obj(t1__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [t1__']
                   )
                 ]
    with t1__' := <pp-option(pp-one-Z(prettyprint-Dot))> t1__

  is-Obj =
    ?Obj(_)

  is-InlinedCall =
    fail

  is-Obj =
    fail


strategies
  prettyprint-example =
    prettyprint-Exp

  prettyprint-Exp :
    Label(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [ t1__'
                             , S(".")
                             , t2__'
                             , S("()")
                             ]
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-LABEL)> t2__

  is-Exp =
    ?Label(_, _)

  prettyprint-Exp :
    Labels(t1__, t2__) -> [ H(
                              [SOpt(HS(), "0")]
                            , [ t1__'
                              , S(".")
                              , t2__'
                              , S("()")
                              ]
                            )
                          ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-LABELS)> t2__

  is-Exp =
    ?Labels(_, _)

  prettyprint-Exp :
    HasLabel(t1__, t2__, t3__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [ t1__'
                                      , S(".")
                                      , t2__'
                                      , S("(")
                                      , t3__'
                                      , S(")")
                                      ]
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-HASLABEL)> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-Exp =
    ?HasLabel(_, _, _)

  prettyprint-Exp :
    Id(t1__, t2__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ t1__'
                          , S(".")
                          , t2__'
                          , S("()")
                          ]
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-ID)> t2__

  is-Exp =
    ?Id(_, _)

  prettyprint-Exp :
    Has(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S(". ")
                                 , t2__'
                                 , S("(")
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-HAS)> t2__
    with t3__' := <pp-H-list(prettyprint-Prop|", ")> t3__

  is-Exp =
    ?Has(_, _, _)

  is-Exp =
    fail


strategies
  prettyprint-example =
    prettyprint-Exp

  prettyprint-Exp :
    InDegree(t1__, t2__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [ t1__'
                                , S(". ")
                                , t2__'
                                , S("()")
                                ]
                              )
                            ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-INDEGREE)> t2__

  is-Exp =
    ?InDegree(_, _)

  prettyprint-Exp :
    OutDegree(t1__, t2__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S(". ")
                                 , t2__'
                                 , S("()")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-Exp)> t1__
    with t2__' := <pp-one-Z(prettyprint-OUTDEGREE)> t2__

  is-Exp =
    ?OutDegree(_, _)

  is-Exp =
    fail


strategies
  prettyprint-example =
    prettyprint-Exp

  prettyprint-example =
    prettyprint-StarOrExp

  prettyprint-example =
    prettyprint-Group-Concat-Sep

  prettyprint-example =
    prettyprint-Distinct

  prettyprint-Exp :
    COUNT(t1__, t2__, t3__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ t1__'
                                   , S("(")
                                   , t2__'
                                   , t3__'
                                   , S(")")
                                   ]
                                 )
                               ]
    with t1__' := <pp-one-Z(prettyprint-COUNT)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-StarOrExp)> t3__

  is-Exp =
    ?COUNT(_, _, _)

  prettyprint-Exp :
    MIN(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-MIN)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-Exp =
    ?MIN(_, _, _)

  prettyprint-Exp :
    MAX(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-MAX)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-Exp =
    ?MAX(_, _, _)

  prettyprint-Exp :
    SUM(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-SUM)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-Exp =
    ?SUM(_, _, _)

  prettyprint-Exp :
    AVG(t1__, t2__, t3__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ t1__'
                                 , S("(")
                                 , t2__'
                                 , t3__'
                                 , S(")")
                                 ]
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-AVG)> t1__
    with t2__' := <pp-option(pp-one-Z(prettyprint-Distinct))> t2__
    with t3__' := <pp-one-Z(prettyprint-Exp)> t3__

  is-Exp =
    ?AVG(_, _, _)

  prettyprint-StarOrExp :
    Star() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("*")]
                )
              ]

  is-StarOrExp =
    ?Star()

  prettyprint-StarOrExp :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-StarOrExp)
    where t1__' := <pp-one-Z(prettyprint-Exp)> t1__

  prettyprint-Group-Concat-Sep :
    Sep(t1__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S(", "), t1__']
                   )
                 ]
    with t1__' := <pp-one-Z(prettyprint-String)> t1__

  is-Group-Concat-Sep =
    ?Sep(_)

  prettyprint-Distinct :
    Distinct(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [t1__']
                        )
                      ]
    with t1__' := <pp-one-Z(prettyprint-DISTINCT)> t1__

  is-Distinct =
    ?Distinct(_)

  is-Exp =
    fail

  is-StarOrExp =
    fail

  is-Group-Concat-Sep =
    fail

  is-Distinct =
    fail