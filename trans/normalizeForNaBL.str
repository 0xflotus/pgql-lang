module normalizeForNaBL

imports
  
  src-gen/signatures/-
  signatures-norm/-
  signatures
  normalizedAST-sig
  common

rules
  
  normalizeForNaBL = alltd(normalizeForNaBL-groupBy); alltd(normalizeForNaBL-orderBy)
  
rules
  
  normalizeForNaBL-groupBy:
    Query(fromClause, graphPattern, matchOrderHint, Select(distinctOrReduced, expAsVars, groupBy, having, orderBy, limitOffsets)) ->
    Query(fromClause, graphPattern, matchOrderHint, Select(distinctOrReduced, expAsVars', groupBy', having, orderBy', limitOffsets))
    where
      // if (1) there is a GROUP BY or (2) there are aggregates in the SELECT, then all variables
      // in the SELECT and ORDER BY need to be group keys or need to be inside aggregates
      !groupBy; ?Some(_) + !expAsVars; oncetd(is-aggregate)
    with
      expAsVars' := <to-groupRefs> expAsVars;
      orderBy' := <to-groupRefs> orderBy;
      groupBy' := <to-groupDefs> groupBy
 
  normalizeForNaBL-orderBy = ?OrderClause(_); alltd(?VarRef(<id>); !VarRefInOrderby(<id>))
 
  to-groupRefs = alltd(is-aggregate <+ to-groupRef)
  to-groupRef = ?VarRef(v); !GroupRef(v)
  
  to-groupDefs = alltd(to-groupDef)
  to-groupDef = ?ExpAsVar(v, exp); !ExpAsGroupVar(v, exp)